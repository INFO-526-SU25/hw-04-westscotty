---
title: "HW 04"
author: "Weston Scott"
format: 
  html:
    embed-resources: true
    fig-alt: true
toc: true
editor:
  render-on-save: true
execute:
  warning: false
bibliography: references.bib
---

```{r library_setup, include=FALSE}
if (!require("pacman")) 
    install.packages("pacman")

# Use pacman::p_load to install and load CRAN packages
pacman::p_load(
    dplyr,
    ggplot,
    ggrepel,
    ggridges,
    patchwork,
    RColorBrewer,
    readxl,
    scales,
    sf,
    tigris,
    tidyverse
)

# Handle GitHub package separately
if (!require("dsbox")) {
      # Install devtools if not present
      if (!require("devtools")) 
          install.packages("devtools")
devtools::install_github("tidyverse/dsbox")
      library(dsbox)
}

options(tigris_use_cache = TRUE)

ggplot2::theme_set(ggplot2::theme_minimal(base_size = 14))
options(width = 65)

knitr::opts_chunk$set(
  fig.width = 7.5,
  fig.asp = 0.718,
  fig.retina = 3,
  fig.align = "center",
  dpi = 300
)
```

## 1 - A second chance

I received full marks on each problem for Homework 1, so I chose to do problem 1 over again. For this project on road traffic accidents in Edinburgh (2018), I initially visualized the distribution of accidents across time of day, split by weekday/weekend and severity, using a density plot. I chose this plot to explore temporal patterns in accident severity — for example, when serious or fatal accidents are more likely to occur — and how these patterns change between by day of week.

I plan to split the data not by weekday vs weekend, but by each day of the week to see if the trends are faceted more than originally shown in the plot. The colors are not originally great to look at, I planned to use a colorblind palette to help with this, using more contrasting colors. Additionally, I plan to use a ridge-plot (geom_density_ridges) to show the relationships for all the days of the week in order.

```{r second_chance_problem1}
accidents <- read_csv("data/accidents.csv") |>
    mutate(
        time_hour = hour(hms(time)) + minute(hms(time)) / 60,
        severity = factor(severity, 
                          levels = c("Fatal", 
                                     "Serious", 
                                     "Slight")),
        day_of_week = factor(day_of_week,
                             levels = rev(c("Monday", 
                                        "Tuesday", 
                                        "Wednesday",
                                        "Thursday", 
                                        "Friday", 
                                        "Saturday", 
                                        "Sunday")))
        ) |>

    filter(!is.na(time_hour))

ggplot(
    accidents,
    aes(x = time_hour, 
        y = day_of_week, 
        fill = severity)
) +

geom_density_ridges(
    alpha = 0.6, 
    scale = 1
) +

scale_x_continuous(
    breaks = seq(0, 24, by = 4),
    labels = sprintf("%02d:00", 
                     seq(0, 24, by = 4))
) +

scale_fill_manual(
    values = c("Fatal" = "#000000", 
               "Serious" = "#D55E00", 
               "Slight" = "#56B4E9")
) +

coord_cartesian(xlim = c(0, 24)) +
labs(
    title = "Traffic Accidents by Day of Week and Time of Day",
    subtitle = "Colored by Severity",
    x = "Time of Day",
    y = "Day of Week",
    fill = "Severity",
    caption = "Source: Road traffic dataset in Edinburgh,UK \nUK Government produced data 2018"
) +

theme(
    plot.title.position = "plot"
)
```

## 2. Arizona state of counties

```{r az_counties_problem2}
az_counties <- counties(state = "AZ",
                        year = 2021,
                        progress_bar = FALSE) |>
    mutate(
        name = gsub("\\s+County$", "", NAME),
        x = st_coordinates(st_centroid(geometry))[, 1],
        y = st_coordinates(st_centroid(geometry))[, 2]
    ) |> glimpse()


ggplot(az_counties) +
geom_sf(fill = 'grey90', 
        color = "grey10") +

geom_label_repel(aes(x = x, 
                     y = y, 
                     label = NAME),
                 size = 3,
                 min.segment.length = 0.1,
                 box.padding = 0.5,
                 segment.color = "grey20") +

coord_sf() +
labs(
    title = "Counties in Arizona State",
    caption = "Source: Shapefile obtained using {tigris} R package, v2.2.1",
    x = "Longitude",
    y = "Latitude"
)
```

### Resources

Found help with the labeling using the `st_coordinates` and the `geom_label_repel` [@ggrepel_gallery],[@sf_manual].

## 3. Arizona state of population change

```{r}
az_counties <- counties(
    state = "AZ",
    year = 2021,
    progress_bar = FALSE
)

pop_data <- read_excel("data/co-est2023-pop-04.xlsx", 
                       skip = 5, 
                       n_max = 15,
                       col_names = c("county", "base_2020", "pop_2020", 
                                     "pop_2021", "pop_2022", "pop_2023"))

pop_data <- pop_data |>
    mutate(
        county = sub("\\.(.+) County, Arizona", "\\1", county),
        total_pop_change_20_23 = pop_2023 - pop_2020
    ) |>
    select(-c(base_2020, pop_2020, pop_2021, pop_2022, pop_2023))

pop_data

az_data <- az_counties |>
    left_join(
        pop_data, 
        by = c("NAME" = "county")
    )

rdbu_palette <- rev(brewer.pal(5, "RdBu"))

ggplot(data = az_data) +
geom_sf(aes(fill = total_pop_change_20_23), 
        color = "white") +

scale_fill_gradientn(colors = rdbu_palette,
                    name = "Population change",
                    labels = function(x) format(x, big.mark = ",")) +

coord_sf() +
labs(
    title = "Resident Population Change for Counties in AZ",
    subtitle = "July 01, 2020 to July 01, 2023",
    caption = "Source: Shapefile obtained using {tigris} R package, v2.2.1\npopulation change data from the US Census Bureau",
    x = "Longitude",
    y = "Latitude"
) +

theme(
    plot.title.position = "plot"
)
```

### Resources

Found help with the color filling using the `scale_fill_gradientn` function and then the `rdbu` palette as well [@ggplot2_scale_gradient], [@rcolorbrewer_gallery].

## 4. Arizona state of Indiginous Tribal Regions

```{r az_tribal_regions_problem4}
az_counties <- counties(
    state = "AZ",
    year = 2021,
    progress_bar = FALSE
)

tribal_data <- st_read("data/American_Indian_Reservations_in_Arizona.shp") |>
    st_transform(crs = st_crs("EPSG:4269")) |>
    mutate(
        x = st_coordinates(st_centroid(geometry))[, 1],
        y = st_coordinates(st_centroid(geometry))[, 2]
    ) |>
    glimpse()

ggplot(az_counties) +
geom_sf(
    fill = 'grey90', 
    color = "white"
) +

geom_sf(
    data = tribal_data, 
    linewidth = 1, 
    fill = NA, 
    color = "black"
) +

geom_label_repel(
    data = tribal_data |>     
        filter(NAME %in% c("Hopi Tribe", 
                           "Navajo Nation", 
                           "White Mountain Apache Tribe", 
                           "San Carlos Apache Tribe", 
                           "Tohono O’odham Nation")),
    aes(x = x, 
        y = y, 
        label = NAME),
    size = 4,
    min.segment.length = 0.1,
    box.padding = 0.5,
    segment.color = "grey20"
) +

coord_sf() +
labs(
    title = "Indigenous Tribal Boundaries in AZ",
    caption = "Source: Shapefile obtained using {tigris} R package, v2.2.1\nIndigenous Tribe Shapefile obtained from AZGeo Data",
    x = "Longitude",
    y = "Latitude"
) +

theme(
    plot.title.position = "plot"
)
```

### Resources

Found help with reading a shapefile using the `st_read` function [@rgraphgallery_shapefile]. Found help for using `st_transform` for converting coordinate systems [@heiss_dataviz_example].

## 5. Arizona state of patchwork

```{r prep_data_problem5}
az_counties <- counties(state = "AZ",
                        year = 2021,
                        progress_bar = FALSE) |>
    mutate(
        name = gsub("\\s+County$", "", NAME),
        x = st_coordinates(st_centroid(geometry))[, 1],
        y = st_coordinates(st_centroid(geometry))[, 2]
    )

tribal_data <- st_read("data/American_Indian_Reservations_in_Arizona.shp") |>
    st_transform(crs = st_crs("EPSG:4269")) |>
    mutate(
        x = st_coordinates(st_centroid(geometry))[, 1],
        y = st_coordinates(st_centroid(geometry))[, 2]
    )

pop_data <- read_excel("data/co-est2023-pop-04.xlsx", 
                       skip = 5, 
                       n_max = 15,
                       col_names = c("county", "base_2020", "pop_2020", 
                                     "pop_2021", "pop_2022", "pop_2023"))

pop_data <- pop_data |>
    mutate(
        county = sub("\\.(.+) County, Arizona", "\\1", county),
        total_pop_change_20_23 = pop_2023 - pop_2020
    ) |>
    select(-c(base_2020, pop_2020, pop_2021, pop_2022, pop_2023))

az_data <- az_counties |>
    left_join(
        pop_data, 
        by = c("NAME" = "county")
    )

rdbu_palette <- rev(brewer.pal(5, "RdBu"))
```

```{r patchwork_main_plot_problem5}
main_plot <- ggplot(data = az_data) +

    geom_sf(
        aes(fill = total_pop_change_20_23), 
        color = "white"
    ) +
    
    scale_fill_gradientn(
        colors = rdbu_palette,
        name = "Population change",
        labels = function(x) format(x, big.mark = ","),
        guide = guide_colorbar(barwidth = 9,
                               barheight = 1,
                               direction = "horizontal",
                               title.position = "top")
    ) +

    geom_rect(
        aes(xmin = -113.5, 
            xmax = -110, 
            ymin = 31.25, 
            ymax = 34.25),
        fill = NA, 
        color = "black", 
        linetype = "dashed", 
        linewidth = 0.5
    ) +

    geom_segment(
        data = data.frame(x = c(-113.5, -110),
                          y = c(34.25, 31.25),
                          xend = c(-122, -116.75),
                          yend = c(32.75, 28)),
        aes(x = x, 
            y = y, 
            xend = xend, 
            yend = yend),
        color = "black", 
        linetype = "dashed", 
        linewidth = 0.5
    ) +

    geom_label_repel(
        data = filter(az_counties, name %in% c("Maricopa", "Pinal", "Pima")),
        aes(x = x, 
            y = y, 
            label = NAME),
        size = 4,
        min.segment.length = 0.1,
        box.padding = 0.5,
        segment.color = "grey20"
    ) +

    coord_sf(
        xlim = c(-122, -109), 
        ylim = c(28.5, 37)
    ) +

    labs(
        title = "Resident Population Change for Counties in AZ",
        subtitle = "July 01, 2020 to July 01, 2023",
        caption = "Source: Shapefile obtained using {tigris} R package, v2.2.1\npopulation change data from the US Census Bureau\nIndigenous Tribe Shapefile obtained from AZGeo Data",
        x = "Longitude",
        y = "Latitude"
    ) +
    
    theme(
        legend.position = c(0.0, 0.7),
        legend.justification = c(0, 0),
        plot.title.position = "plot"
    )
```

```{r patchwork_zoom_plot}
zoom_plot <- ggplot() +
    geom_sf(
        data = filter(az_data, 
                      name %in% c("Maricopa", 
                                  "Pinal", 
                                  "Pima", 
                                  "Santa Cruz", 
                                  "Gila", 
                                  "Yavapai")), 
        aes(fill = total_pop_change_20_23), 
        color = "white"
    ) +

    geom_sf(
        data = tribal_data, 
        fill = NA, 
        color = "black", 
        linewidth = 0.75
    ) +
    
    scale_fill_gradientn(
        colors = rdbu_palette,
        name = NULL,
        labels = NULL,
        limits = range(az_data$total_pop_change_20_23,
                       na.rm = TRUE)
    ) +
    
    geom_label_repel(
        data = filter(tribal_data, 
                      NAME %in% c("White Mountain Apache Tribe",
                                  "San Carlos Apache Tribe",
                                  "Tohono O’odham Nation")),
        aes(x = x, 
            y = y, 
            label = NAME),
        size = 3, 
        box.padding = 0.5, 
        min.segment.length = 0
    ) +

    coord_sf(
        xlim = c(-113.5, -110), 
        ylim = c(31.25, 34.25)
    ) +

    theme_void() +
    theme(
        panel.background = element_rect(fill = "grey50"),
        legend.position = "none"
    )
```

```{r patchwork_final_plot}
final_map <- main_plot +
    inset_element(
        zoom_plot, 
        left = 0.0, 
        bottom = 0.0, 
        right = 0.5, 
        top = 0.5
    )

final_map
```

### Resources

Found help with the patchwork `inset_element` [@patchwork_inset_element]. Found help with drawing the line dashed line segments for `geom_segment` to emphasize the zoom window [@ggplot2_geom_segment]. Found help with drawing the dashed line box around the zoomed portion on the main plot using `geom_rect` [@geeksforgeeks_geomrect]. I read through a few resources helping my get an idea of how to even approach a zoom window,, this source was quite instructive [@r_spatial_ggplot2_sf].